<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.movie.mapper.BoardMapper">
	
	<!-- 분실물 등록 -->
	<insert id="insertLostBoard">
		<selectKey keyProperty="lost_code" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(lost_code), 0) FROM lost_board
		</selectKey>
		INSERT
			INTO lost_board
			VALUES (
				 #{lost_code} + 1
				,#{member_id}
				,#{cinema_name}
				,#{lost_name}
				,#{lost_subject}
				,#{lost_content}
				,#{lost_tel}
				,#{lost_email}
				,#{lost_date}
				,now()
				,#{lost_passwd}
				,"미답변"
				,#{lost_board_rep_content}
				,"분실물"
			)
	</insert>
	
	<!-- 분실물 목록 -->
	<select id="selectLostBoardList" resultType="hashmap">
		SELECT ROW_NUMBER() OVER(ORDER BY lost_code ) AS rownum, lb.*, count(*) over() AS totalCnt
			FROM lost_board lb
			WHERE 1=1
			<if test="searchKeyword != null and !searchKeyword.equals('')">
				AND (lost_subject LIKE '%${searchKeyword}%' OR lost_content LIKE '%${searchKeyword}%')
			</if>
			<if test="rep_board != null and !rep_board.equals('') and !rep_board.equals('전체')">
				AND lost_board_rep = #{rep_board}
			</if>
			<if test="cinema_name != null and !cinema_name.equals('') and !cinema_name.equals('전체')">
				AND cinema_name = #{cinema_name}
			</if>
			ORDER BY 
				lost_code DESC
			<if test="startNum != null and !startNum.equals('')">
				LIMIT ${startNum}, ${endNum}
			</if>
	</select>
	
	<!-- 분실물 상세 프로  -->
	<select id="selectLostPasswd" resultType="hashmap">
		SELECT *
			FROM lost_board 
			WHERE lost_code = #{lost_code}
				AND lost_passwd = #{lost_passwd}
	</select>
	
	<!-- 분실물 상세 -->
	<select id="selectLostDetail" resultType="hashmap">
		SELECT *
			FROM lost_board
			WHERE lost_code = #{lost_code}
	</select>
	
	<!-- 분실물 삭제 -->
	<delete id="deleteLostBoard">
		DELETE 
			FROM lost_board
			WHERE lost_code = #{lost_code}
	</delete>
	
	<!-- 분실물 등록창 -->
	<select id="selectLostBoard" resultType="hashmap">
		SELECT *
			FROM lost_board
			WHERE lost_code = #{lost_code}
	</select>
	
	<!-- 분실물 답변 -->
	<update id="updatLostBoard">
		UPDATE lost_board
			SET lost_board_rep_content = #{lost_board_rep_content}
			, lost_board_rep = "답변완료"
			WHERE lost_code = #{lost_code}
	</update>
	
	<!-- 1:1 등록 -->
	<insert id="insertOneBoard">
		INSERT 
			INTO one_board
			VALUES (
				null
				,#{member_id}
				,#{one_name}
				,#{one_tel}
				,#{one_email}
				,#{cinema_name}
				,#{one_question_type}
				,#{one_subject}
				,#{one_content}
				,#{one_fileimg}
				,now()
				,#{one_passwd}
				,"미답변"
				,#{one_rep_board_content}
			)
	</insert>
	
	<!-- 관리자1:1 목록 -->
	<select id="selectOneBoardList" resultType="hashmap">
		SELECT ROW_NUMBER() OVER(ORDER BY one_code ) AS rownum, ob.*, count(*) over() AS totalCnt 
			FROM one_board ob
			WHERE 1=1
			<if test="searchKeyword != null and !searchKeyword.equals('')">
				AND (one_subject LIKE '%${searchKeyword}%' OR one_content LIKE '%${searchKeyword}%')
			</if>
			<if test="cinema_name != null and !cinema_name.equals('') and !cinema_name.equals('전체공지')">
				AND cinema_name = #{cinema_name}
			</if>
			<if test="rep_board != null and !rep_board.equals('') and !rep_board.equals('전체')">
				AND one_rep_board = #{rep_board}
			</if>
			ORDER BY one_code DESC
			<if test="startNum != null and !startNum.equals('')">
				LIMIT ${startNum}, ${endNum}
			</if>
			
	</select>
	
	<!-- 문의 내역 목록 -->
	<select id="selectBoardList" resultType="hashmap">
		SELECT ROW_NUMBER() OVER(ORDER BY write_date , table_name , code ) AS rownum, T1.*, count(*) OVER() AS totalCnt
		FROM(
			SELECT 
				'one_board' AS table_name, one_code AS code, cinema_name, one_question_type AS question_type,
				one_subject AS subject, one_rep_board AS rep_board, one_write_date AS write_date, one_passwd AS passwd,
				one_rep_board_content AS rep_content
			FROM one_board
			WHERE 1=1
			<if test="memberName!= null and !memberName.equals('')">
				AND one_name = #{memberName}
			</if>
			<if test="memberTel!= null and !memberTel.equals('')">
				AND one_tel = #{memberTel}
			</if>
			<if test="memberEmail!= null and !memberEmail.equals('')">
				AND one_email = #{memberEmail}
			</if>
			<if test="searchKeyword != null and !searchKeyword.equals('')">
				AND (one_subject LIKE '%${searchKeyword}%' OR one_content LIKE '%${searchKeyword}%')
			</if>
			<if test="rep_board != null and !rep_board.equals('') and !rep_board.equals('전체')">
				AND one_rep_board = #{rep_board}
			</if>
			UNION ALL 
			SELECT 
				'lost_board' AS table_name, lost_code AS code, cinema_name, lost_question_type AS  question_type,
				lost_subject AS subject, lost_board_rep AS rep_board, lost_write_date AS write_date, lost_passwd AS passwd,
				lost_board_rep_content  AS rep_content
			FROM lost_board
			WHERE 1=1 
			<if test="memberName!= null and !memberName.equals('')">
				AND lost_name = #{memberName}
			</if>
			<if test="memberTel!= null and !memberTel.equals('')">
				AND lost_tel = #{memberTel}	
			</if>
			<if test="memberEmail!= null and !memberEmail.equals('')">
				AND lost_email = #{memberEmail}	
			</if>
			<if test="searchKeyword != null and !searchKeyword.equals('')">
				AND (lost_subject LIKE '%${searchKeyword}%' OR lost_content LIKE '%${searchKeyword}%')
			</if>
			<if test="rep_board != null and !rep_board.equals('') and !rep_board.equals('전체')">
				AND lost_board_rep = #{rep_board}
			</if>
		) T1
		ORDER BY write_date DESC 
		, table_name DESC, code DESC
		<if test="startNum != null and !startNum.equals('')">
            LIMIT ${startNum}, ${endNum}
        </if>
	</select>
	
	<!-- 문의 상세 프로  -->
	<select id="selectOnePasswd" resultType="hashmap">
		SELECT * FROM (
			SELECT 'one_board' AS table_name, one_code AS code, cinema_name, one_question_type AS question_type,
					one_subject AS subject, one_content AS content, one_rep_board AS rep_board, one_write_date AS write_date,
					one_rep_board_content AS rep_content, one_passwd AS passwd
				FROM one_board
				WHERE one_code = #{code}
				AND #{table_name} = 'one_board'
				AND one_passwd = #{passwd}
			UNION ALL 
			SELECT 'lost_board' AS table_name, lost_code AS code, cinema_name, lost_question_type AS  question_type,
					lost_subject AS subject, lost_content AS content, lost_board_rep AS rep_board, lost_write_date AS write_date,
					lost_board_rep_content AS rep_content, lost_passwd AS passwd
				FROM lost_board
				WHERE lost_code = #{code}
				AND #{table_name} = 'lost_board'
				AND lost_passwd = #{passwd}
		)T1
	</select>
	
	<!-- 문의 내역 상세 -->
	<select id="selectDetail" resultType="hashmap">
		SELECT * FROM (
			SELECT 'one_board' AS table_name, one_code AS code, cinema_name, one_question_type AS question_type,
					one_subject AS subject, one_content AS content, one_rep_board AS rep_board, one_write_date AS write_date,
					one_rep_board_content AS rep_content, one_passwd AS passwd
				FROM one_board
				WHERE one_code = #{code}
				AND #{table_name} = 'one_board'
			UNION ALL 
			SELECT 'lost_board' AS table_name, lost_code AS code, cinema_name, lost_question_type AS  question_type,
					lost_subject AS subject, lost_content AS content, lost_board_rep AS rep_board, lost_write_date AS write_date,
					lost_board_rep_content AS rep_content, lost_passwd AS passwd
				FROM lost_board
				WHERE lost_code = #{code}
				AND #{table_name} = 'lost_board'
		)T1
	</select>
	
	<!-- 문의 내역 삭제 -->
	<delete id="deleteBoard">
		DELETE 
			FROM ${table_name}
			WHERE ${codeChk} = #{code}
	</delete>
	
	<!-- 1:1 답변창 -->
	<select id="selectOneBoard" resultType="hashmap">
		SELECT *
			FROM one_board
			WHERE one_code = #{one_code}
	</select>
	
	<!-- 1:1 답변 -->
	<update id="updatOneBoard">
		UPDATE one_board
			SET one_rep_board_content = #{one_rep_board_content}
			, one_rep_board = "답변완료"
			WHERE one_code = #{one_code}
	</update>
	
	<!-- 1:1 문의한 내역 상세 --> 
	<select id="selectOneDetail" resultType="hashmap">
		SELECT *
			FROM one_board
			WHERE one_code = ${one_code}
	</select>
	
	<!-- 1:1 삭제 -->
	<delete id="deleteOneBoard">
		DELETE 
			FROM one_board
			WHERE one_code = #{one_code}
	</delete>
	
	<!-- 공지사항 등록 -->
	<insert id="insertNoticeBoard">
		<selectKey keyProperty="notice_code" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(notice_code), 0) FROM notice_board
		</selectKey>
		INSERT
			INTO notice_board
			VALUES(
				#{notice_code} + 1
				, #{cinema_name}
				, #{notice_subject}
				, #{notice_content}
				, now()
			)
	</insert>
	
	<!-- 공지사항 목록 -->
	<select id="selectNoticeBoardList" resultType="hashmap">
		SELECT ROW_NUMBER() OVER(ORDER BY notice_code ) AS rownum, nb.*, count(*) over() AS totalCnt,
			   LAG(notice_code, 1, 0) OVER(ORDER BY notice_code DESC) AS prevNum,
			   LEAD(notice_code, 1, 0) OVER(ORDER BY notice_code DESC) AS nextNum
			FROM notice_board nb
			WHERE 1=1
			<if test="searchKeyword != null and !searchKeyword.equals('')">
				AND (notice_subject LIKE '%${searchKeyword}%' OR notice_content LIKE '%${searchKeyword}%')
			</if>
			<if test="cinema_name != null and !cinema_name.equals('') and !cinema_name.equals('전체공지')">
				AND cinema_name = #{cinema_name}
			</if>
			ORDER BY notice_code DESC
			<if test="startNum != null and !startNum.equals('')">
				LIMIT ${startNum}, ${endNum}
			</if>
	</select>
	
	<!-- 공지사항 상세 -->
	<select id="selectNoticeDetail" resultType="hashmap">
		SELECT *
			FROM notice_board
			WHERE notice_code = #{notice_code}
	</select>
	
	<!-- 공지사항 수정창 -->
	<select id="selectNoticeBoard" resultType="hashmap">
		SELECT *
			FROM notice_board
			WHERE notice_code = #{notice_code}
	</select>
	
	<!-- 공지사항 수정 -->
	<update id="updateNoticeBoard">
		UPDATE notice_board
			SET notice_subject = #{notice_subject}
			, cinema_name = #{cinema_name}
			, notice_content = #{notice_content}
			WHERE notice_code = #{notice_code}
	</update>
	
	<!-- 공지사항 삭제 -->
	<delete id="deleteNoticeBoard">
		DELETE 
			FROM notice_board
			WHERE notice_code = #{notice_code}
	</delete>
	
	<!-- 자주묻는 질문 등록 -->
	<insert id="insertFaqBoard">
		<selectKey keyProperty="faq_code" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(faq_code), 0) FROM faq_board
		</selectKey>
		INSERT
			INTO faq_board
			VALUES(
				#{faq_code} + 1
				, #{faq_group}
				, #{faq_question}
				, #{faq_answer}
				, now()
			)
	</insert>
	
	<!-- 자주묻는 질문 목록 -->
	<select id="selectFaqBoardList" resultType="hashmap">
		SELECT ROW_NUMBER() OVER(ORDER BY faq_code ) AS rownum, fb.*, count(*) over() AS totalCnt 
			FROM faq_board fb
			WHERE 1=1
			<if test="searchKeyword != null and !searchKeyword.equals('')">
				AND (faq_question LIKE '%${searchKeyword}%' OR faq_answer LIKE '%${searchKeyword}%')
			</if>
			<if test="faq_group != null and !faq_group.equals('') and !faq_group.equals('전체')">
				AND faq_group = #{faq_group}
			</if>
			ORDER BY faq_code DESC
			<if test="startNum != null and !startNum.equals('')">
	            LIMIT ${startNum}, ${endNum}
	        </if>
	</select>
	
	<!-- 자주묻는 질문 상세 -->
	<select id="selectFaqDetail" resultType="hashmap">
		SELECT *
			FROM faq_board
			WHERE faq_code = #{faq_code}
	</select>
	
	<!-- 자주묻는 질문 수정창 -->
	<select id="selectFaqBoard" resultType="hashmap">
		SELECT *
			FROM faq_board
			WHERE faq_code = #{faq_code}
	</select>
	
	<!-- 자주묻는 질문 수정 -->
	<update id="updatFaqBoard">
		UPDATE faq_board
			SET faq_group = #{faq_group}
			, faq_question = #{faq_question}
			, faq_answer = #{faq_answer}
			WHERE faq_code = #{faq_code}
	</update>
	
	<!-- 자주묻는 질문 삭제 -->
	<delete id="deleteFaqBoard">
		DELETE 
			FROM faq_board
			WHERE faq_code = #{faq_code}
	</delete>
	
</mapper>
